{"version":3,"file":"ConfigView.js","sources":["../../../webui/src/config/tooltips.ts","../../../webui/src/icons/visibility.svg","../../../webui/src/icons/plus.svg","../../../webui/src/icons/check-mark.svg","../../../webui/src/icons/trash.svg","../../../webui/src/pages/ConfigView.tsx"],"sourcesContent":["export const FIELD_TOOLTIPS: Record<string, string> = {\n  \"Settings.ConsoleLevel\":\n    \"Level of logging; choose between CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG, TRACE.\",\n  \"Settings.Logging\": \"Enable writing log output to files.\",\n  \"Settings.CompletedDownloadFolder\":\n    \"Folder where completed downloads are stored. Replace backslashes with forward slashes.\",\n  \"Settings.FreeSpace\":\n    \"Desired free space threshold (use K, M, G, T suffix). Set to -1 to disable the free space guard.\",\n  \"Settings.FreeSpaceFolder\":\n    \"Path used when checking free space. Replace backslashes with forward slashes.\",\n  \"Settings.AutoPauseResume\":\n    \"Automatically pause and resume torrents in response to the free space guard.\",\n  \"Settings.NoInternetSleepTimer\":\n    \"Delay, in seconds, before retrying when no internet connectivity is detected.\",\n  \"Settings.LoopSleepTimer\":\n    \"Delay, in seconds, between processing passes when monitoring torrents.\",\n  \"Settings.SearchLoopDelay\":\n    \"Delay, in seconds, between media search requests.\",\n  \"Settings.FailedCategory\": \"Category that marks torrents as failed.\",\n  \"Settings.RecheckCategory\": \"Category that triggers recheck handling.\",\n  \"Settings.Tagless\": \"Enable tagless operation when categories are not used.\",\n  \"Settings.IgnoreTorrentsYoungerThan\":\n    \"Ignore torrents younger than this many seconds when evaluating failures.\",\n  \"Settings.PingURLS\":\n    \"Hostnames used to test for internet connectivity. They are pinged frequently.\",\n  \"Settings.FFprobeAutoUpdate\":\n    \"Download and update the bundled ffprobe binary automatically.\",\n  \"Settings.AutoUpdateEnabled\":\n    \"Enable the background worker that periodically checks for qBitrr updates.\",\n  \"Settings.AutoUpdateCron\":\n    \"Cron expression describing when to check for updates (default weekly Sunday at 03:00).\",\n  \"WebUI.Host\":\n    \"Interface address for the built-in WebUI. 0.0.0.0 binds on all interfaces.\",\n  \"WebUI.Port\": \"Port number for the built-in WebUI.\",\n  \"WebUI.Token\":\n    \"Optional bearer token required by the WebUI/API. Leave empty to disable authentication.\",\n   \"WebUI.LiveArr\": \"Enable live updates for Arr views.\",\n   \"WebUI.GroupSonarr\": \"Group Sonarr views by series and seasons in collapsible sections.\",\n   \"WebUI.Theme\": \"Choose the visual theme for the WebUI (light or dark).\",\n\n  \"qBit.Disabled\":\n    \"Disable qBitrr's direct qBittorrent integration (headless mode for search-only setups).\",\n  \"qBit.Host\": \"qBittorrent WebUI host or IP address.\",\n  \"qBit.Port\": \"qBittorrent WebUI port.\",\n  \"qBit.UserName\": \"qBittorrent WebUI username.\",\n  \"qBit.Password\":\n    \"qBittorrent WebUI password. Remove this if authentication is bypassed for the host.\",\n\n  \"ARR.Managed\": \"Toggle whether this Servarr instance is actively managed by qBitrr.\",\n  \"ARR.URI\":\n    \"Servarr URL, including protocol and port if needed (for example http://localhost:8989).\",\n  \"ARR.APIKey\": \"Servarr API key from Settings > General > Security.\",\n  \"ARR.Category\":\n    \"qBittorrent category applied by the Servarr instance to its downloads.\",\n  \"ARR.ReSearch\": \"Re-run searches for failed torrents that qBitrr removes.\",\n  \"ARR.importMode\":\n    \"Preferred import mode (Move, Copy, or Auto) when Servarr grabs completed files.\",\n  \"ARR.RssSyncTimer\":\n    \"Interval, in minutes, between RSS sync requests (0 disables the task).\",\n  \"ARR.RefreshDownloadsTimer\":\n    \"Interval, in minutes, between queue refresh requests (0 disables the task).\",\n  \"ARR.ArrErrorCodesToBlocklist\":\n    \"List of Servarr error messages that should trigger blocklisting and cleanup.\",\n\n  \"EntrySearch.SearchMissing\": \"Search for missing media items.\",\n  \"EntrySearch.AlsoSearchSpecials\": \"Include season 0 specials in missing searches.\",\n  \"EntrySearch.Unmonitored\": \"Include unmonitored series or episodes in searches.\",\n  \"EntrySearch.SearchLimit\":\n    \"Maximum number of concurrent search tasks (Servarr enforces its own limits).\",\n  \"EntrySearch.SearchByYear\":\n    \"Order searches by the year the episode or movie first aired.\",\n  \"EntrySearch.SearchInReverse\":\n    \"Reverse search order (search oldest to newest instead of newest to oldest).\",\n  \"EntrySearch.SearchRequestsEvery\":\n    \"Delay, in seconds, between submitting individual search requests.\",\n  \"EntrySearch.DoUpgradeSearch\":\n    \"Search for improved releases even if a file already exists.\",\n  \"EntrySearch.QualityUnmetSearch\":\n    \"Search again when the quality requirements were not met.\",\n  \"EntrySearch.CustomFormatUnmetSearch\":\n    \"Search again when the minimum custom format score was not met.\",\n  \"EntrySearch.ForceMinimumCustomFormat\":\n    \"Automatically remove torrents that do not meet the minimum custom format score.\",\n  \"EntrySearch.SearchAgainOnSearchCompletion\":\n    \"Restart the search loop when the configured year range is exhausted.\",\n  \"EntrySearch.UseTempForMissing\":\n    \"Switch to temporary profiles when searching for missing media.\",\n  \"EntrySearch.KeepTempProfile\": \"Do not revert to the main profile after using the temp profile.\",\n  \"EntrySearch.MainQualityProfile\":\n    \"Primary quality profile names, in the same order as the temporary profiles.\",\n  \"EntrySearch.TempQualityProfile\":\n    \"Temporary quality profile names, paired with the primary profiles.\",\n  \"EntrySearch.SearchBySeries\":\n    \"Search by entire series instead of individual episodes when applicable.\",\n  \"EntrySearch.PrioritizeTodaysReleases\":\n    \"Prioritise items released today (similar to RSS prioritisation).\",\n\n  \"EntrySearch.Ombi.SearchOmbiRequests\":\n    \"Pull pending Ombi requests when SearchMissing is enabled.\",\n  \"EntrySearch.Ombi.OmbiURI\": \"Ombi server URL.\",\n  \"EntrySearch.Ombi.OmbiAPIKey\": \"Ombi API key.\",\n  \"EntrySearch.Ombi.ApprovedOnly\": \"Only process Ombi requests that are approved.\",\n  \"EntrySearch.Ombi.Is4K\": \"Treat this Ombi configuration as 4K specific.\",\n\n  \"EntrySearch.Overseerr.SearchOverseerrRequests\":\n    \"Pull Overseerr requests when SearchMissing is enabled.\",\n  \"EntrySearch.Overseerr.OverseerrURI\": \"Overseerr server URL.\",\n  \"EntrySearch.Overseerr.OverseerrAPIKey\": \"Overseerr API key.\",\n  \"EntrySearch.Overseerr.ApprovedOnly\": \"Only process Overseerr requests that are approved.\",\n  \"EntrySearch.Overseerr.Is4K\": \"Treat this Overseerr configuration as 4K specific.\",\n\n  \"Torrent.CaseSensitiveMatches\":\n    \"When enabled, regex matches will respect case; otherwise they are case-insensitive.\",\n  \"Torrent.FolderExclusionRegex\":\n    \"Regex patterns that exclude folders outright (full-name match).\",\n  \"Torrent.FileNameExclusionRegex\":\n    \"Regex patterns that exclude individual files based on the file name.\",\n  \"Torrent.FileExtensionAllowlist\":\n    \"Allowed file extensions (or regex) for downloads; leave empty to allow all.\",\n  \"Torrent.AutoDelete\": \"Automatically delete files that are not recognised as media.\",\n  \"Torrent.IgnoreTorrentsYoungerThan\":\n    \"Ignore torrents younger than this many seconds for failure handling.\",\n  \"Torrent.MaximumETA\":\n    \"Maximum allowed remaining ETA in seconds; values above this are considered stalled.\",\n  \"Torrent.MaximumDeletablePercentage\":\n    \"Upper bound for completion percentage when deciding to delete a torrent.\",\n  \"Torrent.DoNotRemoveSlow\": \"Ignore slow torrents when pruning.\",\n  \"Torrent.StalledDelay\":\n    \"Minutes to allow stalled torrents before taking action (-1 disables, 0 is infinite).\",\n  \"Torrent.ReSearchStalled\":\n    \"Re-run searches for stalled torrents before or after removal depending on configuration.\",\n  \"Torrent.RemoveDeadTrackers\": \"Remove trackers flagged as dead.\",\n  \"Torrent.RemoveTrackerWithMessage\":\n    \"Tracker status messages that should trigger tracker removal when RemoveDeadTrackers is enabled.\",\n\n  \"Torrent.SeedingMode.DownloadRateLimitPerTorrent\":\n    \"Per-torrent download rate limit in bytes per second (-1 disables the limit).\",\n  \"Torrent.SeedingMode.UploadRateLimitPerTorrent\":\n    \"Per-torrent upload rate limit in bytes per second (-1 disables the limit).\",\n  \"Torrent.SeedingMode.MaxUploadRatio\":\n    \"Maximum allowed upload ratio (-1 disables the limit).\",\n  \"Torrent.SeedingMode.MaxSeedingTime\":\n    \"Maximum seeding duration in seconds (-1 disables the limit).\",\n  \"Torrent.SeedingMode.RemoveTorrent\":\n    \"Removal policy: -1 do not remove, 1 remove on ratio, 2 remove on time, 3 remove on ratio or time, 4 remove on ratio and time.\",\n};\n\nexport function getTooltip(path: string[]): string | undefined {\n  const joined = path.join(\".\");\n  if (FIELD_TOOLTIPS[joined]) return FIELD_TOOLTIPS[joined];\n  if (path.length > 1) {\n    const withArrPrefix = [\"ARR\", ...path.slice(1)].join(\".\");\n    if (FIELD_TOOLTIPS[withArrPrefix]) return FIELD_TOOLTIPS[withArrPrefix];\n    const entrySearchPrefix = [\"EntrySearch\", ...path.slice(2)].join(\".\");\n    if (path[1] === \"EntrySearch\" && FIELD_TOOLTIPS[entrySearchPrefix]) {\n      return FIELD_TOOLTIPS[entrySearchPrefix];\n    }\n    const torrentPrefix = [\"Torrent\", ...path.slice(2)].join(\".\");\n    if (path[1] === \"Torrent\" && FIELD_TOOLTIPS[torrentPrefix]) {\n      return FIELD_TOOLTIPS[torrentPrefix];\n    }\n  }\n  const leaf = path[path.length - 1];\n  return FIELD_TOOLTIPS[leaf];\n}\n","export default \"__VITE_ASSET__CdYVzc2P__\"","export default \"__VITE_ASSET__DD$$IqcQ__\"","export default \"__VITE_ASSET__DxHRzqTL__\"","export default \"__VITE_ASSET__By16xPBV__\"","import { useCallback, useEffect, useMemo, useState, type JSX } from \"react\";\nimport { getConfig, updateConfig } from \"../api/client\";\nimport type { ConfigDocument } from \"../api/types\";\nimport { useToast } from \"../context/ToastContext\";\nimport { getTooltip } from \"../config/tooltips\";\nimport { IconImage } from \"../components/IconImage\";\nimport Select from \"react-select\";\nimport ConfigureIcon from \"../icons/gear.svg\";\n\nimport RefreshIcon from \"../icons/refresh-arrow.svg\";\nimport VisibilityIcon from \"../icons/visibility.svg\";\nimport AddIcon from \"../icons/plus.svg\";\nimport SaveIcon from \"../icons/check-mark.svg\";\nimport DeleteIcon from \"../icons/trash.svg\";\nimport CloseIcon from \"../icons/close.svg\";\n\ntype FieldType = \"text\" | \"number\" | \"checkbox\" | \"password\" | \"select\";\n\ninterface ValidationContext {\n  root: ConfigDocument;\n  section?: ConfigDocument | null;\n  sectionKey?: string;\n}\n\ntype FieldValidator = (value: unknown, context: ValidationContext) => string | undefined;\n\ninterface FieldDefinition {\n  label: string;\n  path?: string[];\n  type: FieldType;\n  options?: string[];\n  placeholder?: string;\n  description?: string;\n  parse?: (value: string | boolean) => unknown;\n  format?: (value: unknown) => string | boolean;\n  sectionName?: boolean;\n  secure?: boolean;\n  required?: boolean;\n  validate?: FieldValidator;\n  fullWidth?: boolean;\n}\n\ninterface ValidationError {\n  path: string[];\n  message: string;\n}\n\nconst SERVARR_SECTION_REGEX = /(rad|son|anim|lid)arr/i;\n\n// Helper function for react-select theme-aware styles\nconst getSelectStyles = () => {\n  const isDark = document.documentElement.getAttribute('data-theme') === 'dark';\n  return {\n    control: (base: any) => ({\n      ...base,\n      background: isDark ? '#0f131a' : '#ffffff',\n      color: isDark ? '#eaeef2' : '#1d1d1f',\n      borderColor: isDark ? '#2a2f36' : '#d2d2d7',\n      minHeight: '38px',\n      boxShadow: 'none',\n      '&:hover': {\n        borderColor: isDark ? '#3a4149' : '#b8b8bd',\n      }\n    }),\n    menu: (base: any) => ({\n      ...base,\n      background: isDark ? '#0f131a' : '#ffffff',\n      borderColor: isDark ? '#2a2f36' : '#d2d2d7',\n      border: `1px solid ${isDark ? '#2a2f36' : '#d2d2d7'}`,\n    }),\n    option: (base: any, state: any) => ({\n      ...base,\n      background: state.isFocused\n        ? (isDark ? 'rgba(122, 162, 247, 0.15)' : 'rgba(0, 113, 227, 0.1)')\n        : (isDark ? '#0f131a' : '#ffffff'),\n      color: isDark ? '#eaeef2' : '#1d1d1f',\n      '&:active': {\n        background: isDark ? 'rgba(122, 162, 247, 0.25)' : 'rgba(0, 113, 227, 0.2)',\n      }\n    }),\n    singleValue: (base: any) => ({\n      ...base,\n      color: isDark ? '#eaeef2' : '#1d1d1f',\n    }),\n    input: (base: any) => ({\n      ...base,\n      color: isDark ? '#eaeef2' : '#1d1d1f',\n    }),\n    placeholder: (base: any) => ({\n      ...base,\n      color: isDark ? '#9aa3ac' : '#6e6e73',\n    }),\n    menuList: (base: any) => ({\n      ...base,\n      padding: '4px',\n    }),\n  };\n};\n\nconst parseList = (value: string | boolean): string[] =>\n  String(value)\n    .split(\",\")\n    .map((part) => part.trim())\n    .filter(Boolean);\n\nconst formatList = (value: unknown): string =>\n  Array.isArray(value) ? value.join(\", \") : String(value ?? \"\");\n\nconst IMPORT_MODE_OPTIONS = [\"Move\", \"Copy\", \"Auto\"];\n\n\n\n\n\n\n\nconst SENTENCE_END = /(.+?[.!?])(\\s|$)/;\n\nfunction extractTooltipSummary(tooltip?: string): string | undefined {\n  if (!tooltip) return undefined;\n  const trimmed = tooltip.trim();\n  if (!trimmed) return undefined;\n  const match = trimmed.match(SENTENCE_END);\n  const sentence = match ? match[1] : trimmed;\n  return sentence.length > 160 ? `${sentence.slice(0, 157)}…` : sentence;\n}\n\n\n\n\n\nconst SETTINGS_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Console Level\",\n    path: [\"Settings\", \"ConsoleLevel\"],\n    type: \"select\",\n    options: [\"CRITICAL\", \"ERROR\", \"WARNING\", \"NOTICE\", \"INFO\", \"DEBUG\", \"TRACE\"],\n    required: true,\n  },\n  { label: \"Logging\", path: [\"Settings\", \"Logging\"], type: \"checkbox\" },\n  {\n    label: \"Completed Download Folder\",\n    path: [\"Settings\", \"CompletedDownloadFolder\"],\n    type: \"text\",\n    required: true,\n    validate: (value) => {\n      const folder = String(value ?? \"\").trim();\n      if (!folder || folder.toUpperCase() === \"CHANGE_ME\") {\n        return \"Completed Download Folder must be set to a valid path.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Free Space\",\n    path: [\"Settings\", \"FreeSpace\"],\n    type: \"text\",\n    required: true,\n    validate: (value) => {\n      const raw = String(value ?? \"\").trim();\n      if (!raw) {\n        return \"Free Space must be provided.\";\n      }\n      if (raw === \"-1\") {\n        return undefined;\n      }\n      if (!/^-?\\d+(\\.\\d+)?[KMGTP]?$/i.test(raw)) {\n        return \"Free Space must be -1 or a number optionally suffixed with K, M, G, T, or P.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Free Space Folder\",\n    path: [\"Settings\", \"FreeSpaceFolder\"],\n    type: \"text\",\n    validate: (value, context) => {\n      const freeSpace = getValue(context.root, [\"Settings\", \"FreeSpace\"]);\n      const requiresFolder = String(freeSpace ?? \"\").trim() !== \"-1\";\n      if (!requiresFolder) {\n        return undefined;\n      }\n      const folder = String(value ?? \"\").trim();\n      if (!folder || folder.toUpperCase() === \"CHANGE_ME\") {\n        return \"Free Space Folder is required when Free Space monitoring is enabled.\";\n      }\n      return undefined;\n    },\n  },\n  { label: \"Auto Pause/Resume\", path: [\"Settings\", \"AutoPauseResume\"], type: \"checkbox\" },\n  {\n    label: \"No Internet Sleep (s)\",\n    path: [\"Settings\", \"NoInternetSleepTimer\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"No Internet Sleep must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Loop Sleep (s)\",\n    path: [\"Settings\", \"LoopSleepTimer\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Loop Sleep must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Search Loop Delay (s)\",\n    path: [\"Settings\", \"SearchLoopDelay\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Search Loop Delay must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  { label: \"Failed Category\", path: [\"Settings\", \"FailedCategory\"], type: \"text\" },\n  { label: \"Recheck Category\", path: [\"Settings\", \"RecheckCategory\"], type: \"text\" },\n  { label: \"Tagless\", path: [\"Settings\", \"Tagless\"], type: \"checkbox\" },\n  {\n    label: \"Ignore Torrents Younger Than\",\n    path: [\"Settings\", \"IgnoreTorrentsYoungerThan\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Ignore Torrents Younger Than must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Ping URLs\",\n    path: [\"Settings\", \"PingURLS\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n    placeholder: \"one.one.one.one, dns.google.com\",\n  },\n  {\n    label: \"FFprobe Auto Update\",\n    path: [\"Settings\", \"FFprobeAutoUpdate\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Auto Update Enabled\",\n    path: [\"Settings\", \"AutoUpdateEnabled\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Auto Update Cron\",\n    path: [\"Settings\", \"AutoUpdateCron\"],\n    type: \"text\",\n    placeholder: \"0 3 * * 0\",\n    required: true,\n    validate: (value) => {\n      const cron = String(value ?? \"\").trim();\n      const parts = cron.split(/\\s+/).filter(Boolean);\n      if (parts.length < 5 || parts.length > 6) {\n        return \"Auto Update Cron must contain 5 or 6 space-separated fields.\";\n      }\n      return undefined;\n    },\n  },\n\n];\n\nconst WEB_SETTINGS_FIELDS: FieldDefinition[] = [\n  {\n    label: \"WebUI Host\",\n    path: [\"WebUI\", \"Host\"],\n    type: \"text\",\n    required: true,\n    validate: (value) => {\n      if (!String(value ?? \"\").trim()) {\n        return \"WebUI Host is required.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"WebUI Port\",\n    path: [\"WebUI\", \"Port\"],\n    type: \"number\",\n    validate: (value) => {\n      const port = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isInteger(port) || port < 1 || port > 65535) {\n        return \"WebUI Port must be between 1 and 65535.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"WebUI Token\",\n    path: [\"WebUI\", \"Token\"],\n    type: \"password\",\n    secure: true,\n    fullWidth: true,\n  },\n  { label: \"Live Arr\", path: [\"WebUI\", \"LiveArr\"], type: \"checkbox\" },\n  { label: \"Group Sonarr by Series\", path: [\"WebUI\", \"GroupSonarr\"], type: \"checkbox\" },\n  { label: \"Theme\", path: [\"WebUI\", \"Theme\"], type: \"select\", options: [\"Light\", \"Dark\"] },\n];\n\nconst QBIT_FIELDS: FieldDefinition[] = [\n  { label: \"Disabled\", path: [\"qBit\", \"Disabled\"], type: \"checkbox\" },\n  {\n    label: \"Host\",\n    path: [\"qBit\", \"Host\"],\n    type: \"text\",\n    required: true,\n    validate: (value) => {\n      if (!String(value ?? \"\").trim()) {\n        return \"qBit Host is required.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Port\",\n    path: [\"qBit\", \"Port\"],\n    type: \"number\",\n    validate: (value) => {\n      const port = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isInteger(port) || port < 1 || port > 65535) {\n        return \"qBit Port must be between 1 and 65535.\";\n      }\n      return undefined;\n    },\n  },\n  { label: \"UserName\", path: [\"qBit\", \"UserName\"], type: \"text\" },\n  { label: \"Password\", path: [\"qBit\", \"Password\"], type: \"password\" },\n];\n\nconst ARR_GENERAL_FIELDS: FieldDefinition[] = [\n  { label: \"Display Name\", type: \"text\", placeholder: \"Sonarr-TV\", sectionName: true },\n  { label: \"Managed\", path: [\"Managed\"], type: \"checkbox\" },\n  {\n    label: \"URI\",\n    path: [\"URI\"],\n    type: \"text\",\n    placeholder: \"http://host:port\",\n    required: true,\n    validate: (value, context) => {\n      const uri = String(value ?? \"\").trim();\n      const managed = Boolean(getValue(context.section ?? {}, [\"Managed\"]));\n      if (!managed) {\n        return undefined;\n      }\n      if (!uri || uri.toUpperCase() === \"CHANGE_ME\") {\n        return \"URI must be set to a valid URL when the instance is managed.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"API Key\",\n    path: [\"APIKey\"],\n    type: \"password\",\n    secure: true,\n    required: true,\n    validate: (value, context) => {\n      const apiKey = String(value ?? \"\").trim();\n      const managed = Boolean(getValue(context.section ?? {}, [\"Managed\"]));\n      if (!managed) {\n        return undefined;\n      }\n      if (!apiKey || apiKey.toUpperCase() === \"CHANGE_ME\") {\n        return \"API Key must be provided when the instance is managed.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Category\",\n    path: [\"Category\"],\n    type: \"text\",\n    required: true,\n    validate: (value) => {\n      if (!String(value ?? \"\").trim()) {\n        return \"Category is required.\";\n      }\n      return undefined;\n    },\n  },\n  { label: \"Re-search\", path: [\"ReSearch\"], type: \"checkbox\" },\n  {\n    label: \"Import Mode\",\n    path: [\"importMode\"],\n    type: \"select\",\n    options: IMPORT_MODE_OPTIONS,\n    required: true,\n  },\n  {\n    label: \"RSS Sync Timer (min)\",\n    path: [\"RssSyncTimer\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"RSS Sync Timer must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Refresh Downloads Timer (min)\",\n    path: [\"RefreshDownloadsTimer\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Refresh Downloads Timer must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Arr Error Codes To Blocklist\",\n    path: [\"ArrErrorCodesToBlocklist\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n];\n\nconst ARR_ENTRY_SEARCH_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Search Missing\",\n    path: [\"EntrySearch\", \"SearchMissing\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Also Search Specials\",\n    path: [\"EntrySearch\", \"AlsoSearchSpecials\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Unmonitored\",\n    path: [\"EntrySearch\", \"Unmonitored\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Do Upgrade Search\",\n    path: [\"EntrySearch\", \"DoUpgradeSearch\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Quality Unmet Search\",\n    path: [\"EntrySearch\", \"QualityUnmetSearch\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Custom Format Unmet Search\",\n    path: [\"EntrySearch\", \"CustomFormatUnmetSearch\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Force Minimum Custom Format\",\n    path: [\"EntrySearch\", \"ForceMinimumCustomFormat\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Search Limit\",\n    path: [\"EntrySearch\", \"SearchLimit\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 1) {\n        return \"Search Limit must be at least 1.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Search By Year\",\n    path: [\"EntrySearch\", \"SearchByYear\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Search In Reverse\",\n    path: [\"EntrySearch\", \"SearchInReverse\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Search Requests Every (s)\",\n    path: [\"EntrySearch\", \"SearchRequestsEvery\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 1) {\n        return \"Search Requests Every must be at least 1 second.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Search Again On Completion\",\n    path: [\"EntrySearch\", \"SearchAgainOnSearchCompletion\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Use Temp Profile For Missing\",\n    path: [\"EntrySearch\", \"UseTempForMissing\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Keep Temp Profile\",\n    path: [\"EntrySearch\", \"KeepTempProfile\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Main Quality Profile\",\n    path: [\"EntrySearch\", \"MainQualityProfile\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n  {\n    label: \"Temp Quality Profile\",\n    path: [\"EntrySearch\", \"TempQualityProfile\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n  {\n    label: \"Search By Series\",\n    path: [\"EntrySearch\", \"SearchBySeries\"],\n    type: \"select\",\n    options: [\"smart\", \"true\", \"false\"],\n    description: \"smart = auto (series search for multiple episodes, episode search for single), true = always series search, false = always episode search\",\n    format: (value: unknown) => {\n      // Convert boolean or string to string for display\n      if (typeof value === \"boolean\") {\n        return value ? \"true\" : \"false\";\n      }\n      return String(value || \"smart\");\n    },\n    parse: (value: string | boolean) => {\n      // Keep as string for config - backend will handle parsing\n      const str = String(value);\n      if (str === \"true\" || str === \"false\") {\n        return str;\n      }\n      return \"smart\";\n    },\n  },\n  {\n    label: \"Prioritize Today's Releases\",\n    path: [\"EntrySearch\", \"PrioritizeTodaysReleases\"],\n    type: \"checkbox\",\n  },\n];\n\nconst ARR_ENTRY_SEARCH_OMBI_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Search Ombi Requests\",\n    path: [\"EntrySearch\", \"Ombi\", \"SearchOmbiRequests\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Ombi URI\",\n    path: [\"EntrySearch\", \"Ombi\", \"OmbiURI\"],\n    type: \"text\",\n    placeholder: \"http://host:port\",\n  },\n  {\n    label: \"Ombi API Key\",\n    path: [\"EntrySearch\", \"Ombi\", \"OmbiAPIKey\"],\n    type: \"password\",\n  },\n  {\n    label: \"Approved Only\",\n    path: [\"EntrySearch\", \"Ombi\", \"ApprovedOnly\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Is 4K Instance\",\n    path: [\"EntrySearch\", \"Ombi\", \"Is4K\"],\n    type: \"checkbox\",\n  },\n];\n\nconst ARR_ENTRY_SEARCH_OVERSEERR_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Search Overseerr Requests\",\n    path: [\"EntrySearch\", \"Overseerr\", \"SearchOverseerrRequests\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Overseerr URI\",\n    path: [\"EntrySearch\", \"Overseerr\", \"OverseerrURI\"],\n    type: \"text\",\n    placeholder: \"http://host:port\",\n  },\n  {\n    label: \"Overseerr API Key\",\n    path: [\"EntrySearch\", \"Overseerr\", \"OverseerrAPIKey\"],\n    type: \"password\",\n  },\n  {\n    label: \"Approved Only\",\n    path: [\"EntrySearch\", \"Overseerr\", \"ApprovedOnly\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Is 4K Instance\",\n    path: [\"EntrySearch\", \"Overseerr\", \"Is4K\"],\n    type: \"checkbox\",\n  },\n];\n\nconst ARR_TORRENT_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Case Sensitive Matches\",\n    path: [\"Torrent\", \"CaseSensitiveMatches\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Folder Exclusion Regex\",\n    path: [\"Torrent\", \"FolderExclusionRegex\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n  {\n    label: \"File Name Exclusion Regex\",\n    path: [\"Torrent\", \"FileNameExclusionRegex\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n  {\n    label: \"File Extension Allowlist\",\n    path: [\"Torrent\", \"FileExtensionAllowlist\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n  {\n    label: \"Auto Delete\",\n    path: [\"Torrent\", \"AutoDelete\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Ignore Torrents Younger Than (s)\",\n    path: [\"Torrent\", \"IgnoreTorrentsYoungerThan\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Ignore Torrents Younger Than must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Maximum ETA (s)\",\n    path: [\"Torrent\", \"MaximumETA\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Maximum ETA must be -1 or a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Maximum Deletable Percentage\",\n    path: [\"Torrent\", \"MaximumDeletablePercentage\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0 || num > 100) {\n        return \"Maximum Deletable Percentage must be between 0 and 100.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Do Not Remove Slow\",\n    path: [\"Torrent\", \"DoNotRemoveSlow\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Stalled Delay (min)\",\n    path: [\"Torrent\", \"StalledDelay\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Stalled Delay must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Re-search Stalled\",\n    path: [\"Torrent\", \"ReSearchStalled\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Remove Dead Trackers\",\n    path: [\"Torrent\", \"RemoveDeadTrackers\"],\n    type: \"checkbox\",\n  },\n  {\n    label: \"Remove Tracker Messages\",\n    path: [\"Torrent\", \"RemoveTrackerWithMessage\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n];\n\nconst ARR_SEEDING_FIELDS: FieldDefinition[] = [\n  {\n    label: \"Download Rate Limit Per Torrent\",\n    path: [\"Torrent\", \"SeedingMode\", \"DownloadRateLimitPerTorrent\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Download Rate Limit must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Upload Rate Limit Per Torrent\",\n    path: [\"Torrent\", \"SeedingMode\", \"UploadRateLimitPerTorrent\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Upload Rate Limit must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Max Upload Ratio\",\n    path: [\"Torrent\", \"SeedingMode\", \"MaxUploadRatio\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Max Upload Ratio must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Max Seeding Time (s)\",\n    path: [\"Torrent\", \"SeedingMode\", \"MaxSeedingTime\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Max Seeding Time must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Remove Torrent (policy)\",\n    path: [\"Torrent\", \"SeedingMode\", \"RemoveTorrent\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num)) {\n        return \"Remove Torrent policy must be a number.\";\n      }\n      if (num === -1) {\n        return undefined;\n      }\n      if (![1, 2, 3, 4].includes(num)) {\n        return \"Remove Torrent policy must be -1, 1, 2, 3, or 4.\";\n      }\n      return undefined;\n    },\n  },\n];\n\nconst ARR_TRACKER_FIELDS: FieldDefinition[] = [\n  { label: \"Name\", path: [\"Name\"], type: \"text\", required: true },\n  { label: \"URI\", path: [\"URI\"], type: \"text\", required: true },\n  {\n    label: \"Priority\",\n    path: [\"Priority\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < 0) {\n        return \"Priority must be a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Maximum ETA\",\n    path: [\"MaximumETA\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Maximum ETA must be -1 or a non-negative number.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Download Rate Limit\",\n    path: [\"DownloadRateLimit\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Download Rate Limit must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Upload Rate Limit\",\n    path: [\"UploadRateLimit\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Upload Rate Limit must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Max Upload Ratio\",\n    path: [\"MaxUploadRatio\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Max Upload Ratio must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Max Seeding Time\",\n    path: [\"MaxSeedingTime\"],\n    type: \"number\",\n    validate: (value) => {\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num) || num < -1) {\n        return \"Max Seeding Time must be -1 or greater.\";\n      }\n      return undefined;\n    },\n  },\n  {\n    label: \"Add Tracker If Missing\",\n    path: [\"AddTrackerIfMissing\"],\n    type: \"checkbox\",\n  },\n  { label: \"Remove If Exists\", path: [\"RemoveIfExists\"], type: \"checkbox\" },\n  { label: \"Super Seed Mode\", path: [\"SuperSeedMode\"], type: \"checkbox\" },\n  {\n    label: \"Add Tags\",\n    path: [\"AddTags\"],\n    type: \"text\",\n    parse: parseList,\n    format: formatList,\n  },\n];\n\nfunction getArrFieldSets(arrKey: string) {\n  const lower = arrKey.toLowerCase();\n  const isSonarr = lower.includes(\"sonarr\");\n  const isLidarr = lower.includes(\"lidarr\");\n  const generalFields = [...ARR_GENERAL_FIELDS];\n  const entryFields = ARR_ENTRY_SEARCH_FIELDS.filter((field) => {\n    if (!field.path) {\n      return true;\n    }\n    const joined = field.path.join(\".\");\n    if (!isSonarr) {\n      if (\n        joined === \"EntrySearch.AlsoSearchSpecials\" ||\n        joined === \"EntrySearch.SearchBySeries\" ||\n        joined === \"EntrySearch.PrioritizeTodaysReleases\"\n      ) {\n        return false;\n      }\n    }\n    if (isLidarr) {\n      // Lidarr doesn't support SearchByYear (music albums don't have the same year-based search)\n      if (joined === \"EntrySearch.SearchByYear\") {\n        return false;\n      }\n    }\n    return true;\n  });\n  // Ombi and Overseerr don't support music requests, so hide them for Lidarr\n  const entryOmbiFields = isLidarr ? [] : [...ARR_ENTRY_SEARCH_OMBI_FIELDS];\n  const entryOverseerrFields = isLidarr ? [] : [...ARR_ENTRY_SEARCH_OVERSEERR_FIELDS];\n  const torrentFields = [...ARR_TORRENT_FIELDS];\n  const seedingFields = [...ARR_SEEDING_FIELDS];\n  const trackerFields = [...ARR_TRACKER_FIELDS];\n  return {\n    generalFields,\n    entryFields,\n    entryOmbiFields,\n    entryOverseerrFields,\n    torrentFields,\n    seedingFields,\n    trackerFields,\n  };\n}\n\nfunction isEmptyValue(value: unknown): boolean {\n  return (\n    value === null ||\n    value === undefined ||\n    (typeof value === \"string\" && value.trim() === \"\") ||\n    (Array.isArray(value) && value.length === 0)\n  );\n}\n\nfunction basicValidation(def: FieldDefinition, value: unknown): string | undefined {\n  const label = def.label;\n  const isRequired = def.required ?? (def.type === \"number\" || def.type === \"select\");\n  switch (def.type) {\n    case \"text\":\n    case \"password\": {\n      if (!isRequired) {\n        return undefined;\n      }\n      if (isEmptyValue(value)) {\n        return `${label} is required.`;\n      }\n      return undefined;\n    }\n    case \"number\": {\n      if (value === null || value === undefined || value === \"\") {\n        return isRequired ? `${label} is required.` : undefined;\n      }\n      const num = typeof value === \"number\" ? value : Number(value);\n      if (!Number.isFinite(num)) {\n        return `${label} must be a valid number.`;\n      }\n      return undefined;\n    }\n    case \"checkbox\": {\n      if (value === null || value === undefined) {\n        return isRequired ? `${label} is required.` : undefined;\n      }\n      if (typeof value !== \"boolean\") {\n        return `${label} must be true or false.`;\n      }\n      return undefined;\n    }\n    case \"select\": {\n      if (isEmptyValue(value)) {\n        return `${label} is required.`;\n      }\n      if (typeof value !== \"string\") {\n        return `${label} must be selected.`;\n      }\n      if (def.options && !def.options.includes(value)) {\n        return `${label} must be one of ${def.options.join(\", \")}.`;\n      }\n      return undefined;\n    }\n    default:\n      return undefined;\n  }\n}\n\nfunction validateFieldGroup(\n  errors: ValidationError[],\n  fields: FieldDefinition[],\n  state: ConfigDocument | null,\n  basePath: string[],\n  context: ValidationContext\n): void {\n  if (!state) return;\n  for (const field of fields) {\n    if (field.sectionName) {\n      continue;\n    }\n    const pathSegments = field.path ?? [];\n    const value = pathSegments.length\n      ? getValue(state as ConfigDocument, pathSegments)\n      : undefined;\n    const fullPath = [...basePath, ...pathSegments];\n    const baseError = basicValidation(field, value);\n    if (baseError) {\n      errors.push({ path: fullPath, message: baseError });\n      continue;\n    }\n    if (field.validate) {\n      const customError = field.validate(value, context);\n      if (customError) {\n        errors.push({ path: fullPath, message: customError });\n      }\n    }\n  }\n}\n\nfunction validateFormState(formState: ConfigDocument | null): ValidationError[] {\n  if (!formState) return [];\n  const errors: ValidationError[] = [];\n  const rootContext: ValidationContext = { root: formState };\n  validateFieldGroup(errors, SETTINGS_FIELDS, formState, [], rootContext);\n  validateFieldGroup(errors, WEB_SETTINGS_FIELDS, formState, [], rootContext);\n  validateFieldGroup(errors, QBIT_FIELDS, formState, [], rootContext);\n  for (const [key, value] of Object.entries(formState)) {\n    if (!SERVARR_SECTION_REGEX.test(key) || !value || typeof value !== \"object\") {\n      continue;\n    }\n    const section = value as ConfigDocument;\n    const sectionContext: ValidationContext = { root: formState, section, sectionKey: key };\n    const fieldSets = getArrFieldSets(key);\n    validateFieldGroup(errors, fieldSets.generalFields, section, [key], sectionContext);\n    validateFieldGroup(errors, fieldSets.entryFields, section, [key], sectionContext);\n    validateFieldGroup(errors, fieldSets.entryOmbiFields, section, [key], sectionContext);\n    validateFieldGroup(errors, fieldSets.entryOverseerrFields, section, [key], sectionContext);\n    validateFieldGroup(errors, fieldSets.torrentFields, section, [key], sectionContext);\n    validateFieldGroup(errors, fieldSets.seedingFields, section, [key], sectionContext);\n  }\n  return errors;\n}\n\nfunction cloneConfig(config: ConfigDocument | null): ConfigDocument | null {\n  return config ? JSON.parse(JSON.stringify(config)) : null;\n}\n\nfunction getValue(doc: ConfigDocument | null, path: string[]): unknown {\n  if (!doc) return undefined;\n  let cur: unknown = doc;\n  for (const key of path) {\n    if (cur == null || typeof cur !== \"object\") return undefined;\n    cur = (cur as Record<string, unknown>)[key];\n  }\n  return cur;\n}\n\nfunction setValue(\n  doc: ConfigDocument,\n  path: string[],\n  value: unknown\n): void {\n  let cur: Record<string, unknown> = doc;\n  path.forEach((key, idx) => {\n    if (idx === path.length - 1) {\n      cur[key] = value;\n    } else {\n      if (typeof cur[key] !== \"object\" || cur[key] === null) {\n        cur[key] = {};\n      }\n      cur = cur[key] as Record<string, unknown>;\n    }\n  });\n}\n\nfunction flatten(doc: ConfigDocument, prefix: string[] = []): Record<string, unknown> {\n  const result: Record<string, unknown> = {};\n  for (const [key, value] of Object.entries(doc)) {\n    const nextPath = [...prefix, key];\n    if (value && typeof value === \"object\" && !Array.isArray(value)) {\n      Object.assign(result, flatten(value as ConfigDocument, nextPath));\n    } else {\n      result[nextPath.join(\".\")] = value;\n    }\n  }\n  return result;\n}\n\nfunction ensureArrDefaults(type: string): ConfigDocument {\n  const lowerType = type.toLowerCase();\n  const isSonarr = lowerType.includes(\"sonarr\");\n  const isRadarr = lowerType.includes(\"radarr\");\n  const isLidarr = lowerType.includes(\"lidarr\");\n\n  const arrErrorCodes = isRadarr\n    ? [\n        \"Not a preferred word upgrade for existing movie file(s)\",\n        \"Not an upgrade for existing movie file(s)\",\n        \"Unable to determine if file is a sample\",\n      ]\n    : isLidarr\n    ? [\n        \"Not a preferred word upgrade for existing album file(s)\",\n        \"Not an upgrade for existing album file(s)\",\n        \"Unable to determine if file is a sample\",\n      ]\n    : [\n        \"Not a preferred word upgrade for existing episode file(s)\",\n        \"Not an upgrade for existing episode file(s)\",\n        \"Unable to determine if file is a sample\",\n      ];\n\n  const entrySearch: Record<string, unknown> = {\n    SearchMissing: true,\n    Unmonitored: false,\n    SearchLimit: 5,\n    SearchByYear: true,\n    SearchInReverse: false,\n    SearchRequestsEvery: 300,\n    DoUpgradeSearch: false,\n    QualityUnmetSearch: false,\n    CustomFormatUnmetSearch: false,\n    ForceMinimumCustomFormat: false,\n    SearchAgainOnSearchCompletion: true,\n    UseTempForMissing: false,\n    KeepTempProfile: false,\n    MainQualityProfile: [],\n    TempQualityProfile: [],\n  };\n\n  if (isSonarr) {\n    entrySearch.AlsoSearchSpecials = false;\n    entrySearch.SearchBySeries = \"smart\";\n    entrySearch.PrioritizeTodaysReleases = true;\n  }\n\n  entrySearch.Ombi = {\n    SearchOmbiRequests: false,\n    OmbiURI: \"CHANGE_ME\",\n    OmbiAPIKey: \"CHANGE_ME\",\n    ApprovedOnly: true,\n  };\n  entrySearch.Overseerr = {\n    SearchOverseerrRequests: false,\n    OverseerrURI: \"CHANGE_ME\",\n    OverseerrAPIKey: \"CHANGE_ME\",\n    ApprovedOnly: true,\n    Is4K: false,\n  };\n\n  const torrent: Record<string, unknown> = {\n    CaseSensitiveMatches: false,\n    FolderExclusionRegex: [\n      \"\\\\bextras?\\\\b\",\n      \"\\\\bfeaturettes?\\\\b\",\n      \"\\\\bsamples?\\\\b\",\n      \"\\\\bscreens?\\\\b\",\n      \"\\\\bnc(ed|op)?(\\\\\\\\d+)?\\\\b\",\n    ],\n    FileNameExclusionRegex: [\n      \"\\\\bncop\\\\\\\\d+?\\\\b\",\n      \"\\\\bnced\\\\\\\\d+?\\\\b\",\n      \"\\\\bsample\\\\b\",\n      \"brarbg.com\\\\b\",\n      \"\\\\btrailer\\\\b\",\n      \"music video\",\n      \"comandotorrents.com\",\n    ],\n    FileExtensionAllowlist: isLidarr\n      ? [\".mp3\", \".flac\", \".m4a\", \".aac\", \".ogg\", \".opus\", \".wav\", \".ape\", \".wma\", \".!qB\", \".parts\", \".log\", \".cue\"]\n      : [\".mp4\", \".mkv\", \".sub\", \".ass\", \".srt\", \".!qB\", \".parts\"],\n    AutoDelete: false,\n    IgnoreTorrentsYoungerThan: 600,\n    MaximumETA: 604800,\n    MaximumDeletablePercentage: 0.99,\n    DoNotRemoveSlow: true,\n    StalledDelay: 15,\n    ReSearchStalled: false,\n    RemoveDeadTrackers: false,\n    RemoveTrackerWithMessage: [\n      \"skipping tracker announce (unreachable)\",\n      \"No such host is known\",\n      \"unsupported URL protocol\",\n      \"info hash is not authorized with this tracker\",\n    ],\n    SeedingMode: {\n      DownloadRateLimitPerTorrent: -1,\n      UploadRateLimitPerTorrent: -1,\n      MaxUploadRatio: -1,\n      MaxSeedingTime: -1,\n      RemoveTorrent: -1,\n    },\n  };\n\n  return {\n    Managed: true,\n    URI: \"CHANGE_ME\",\n    APIKey: \"CHANGE_ME\",\n    Category: type,\n    ReSearch: true,\n    importMode: \"Auto\",\n    RssSyncTimer: 5,\n    RefreshDownloadsTimer: 5,\n    ArrErrorCodesToBlocklist: arrErrorCodes,\n    EntrySearch: entrySearch as ConfigDocument,\n    Torrent: torrent as ConfigDocument,\n  } as ConfigDocument;\n}\n\ninterface ConfigViewProps {\n  onDirtyChange?: (dirty: boolean) => void;\n}\n\nexport function ConfigView(props?: ConfigViewProps): JSX.Element {\n  const { onDirtyChange } = props ?? {};\n  const { push } = useToast();\n  const [originalConfig, setOriginalConfig] = useState<ConfigDocument | null>(\n    null\n  );\n  const [formState, setFormState] = useState<ConfigDocument | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  const loadConfig = useCallback(async () => {\n    setLoading(true);\n    try {\n      const config = await getConfig();\n      setOriginalConfig(config);\n      setFormState(cloneConfig(config));\n    } catch (error) {\n      push(\n        error instanceof Error\n          ? error.message\n          : \"Failed to load configuration\",\n        \"error\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [push]);\n\n  useEffect(() => {\n    void loadConfig();\n  }, [loadConfig]);\n\n  const handleFieldChange = useCallback(\n    (path: string[], def: FieldDefinition, raw: unknown) => {\n      if (!formState) return;\n      const next = cloneConfig(formState) ?? {};\n      const parsed =\n        def.parse?.(raw as string | boolean) ??\n        (def.type === \"number\"\n          ? Number(raw) || 0\n          : def.type === \"checkbox\"\n          ? Boolean(raw)\n          : raw);\n      setValue(next, path, parsed);\n      setFormState(next);\n    },\n    [formState]\n  );\n\n  const arrSections = useMemo(() => {\n    if (!formState) return [] as Array<[string, ConfigDocument]>;\n    return Object.entries(formState).filter(([key, value]) =>\n      SERVARR_SECTION_REGEX.test(key) && value && typeof value === \"object\"\n    ) as Array<[string, ConfigDocument]>;\n  }, [formState]);\n  const groupedArrSections = useMemo(() => {\n    const groups: Array<{\n      label: string;\n      type: \"radarr\" | \"sonarr\" | \"lidarr\" | \"other\";\n      items: Array<[string, ConfigDocument]>;\n    }> = [];\n    const sorted = [...arrSections].sort((a, b) =>\n      a[0].localeCompare(b[0], undefined, { numeric: true, sensitivity: \"base\" })\n    );\n    const radarr: Array<[string, ConfigDocument]> = [];\n    const sonarr: Array<[string, ConfigDocument]> = [];\n    const lidarr: Array<[string, ConfigDocument]> = [];\n    const others: Array<[string, ConfigDocument]> = [];\n    for (const entry of sorted) {\n      const [key] = entry;\n      const keyLower = key.toLowerCase();\n      if (keyLower.startsWith(\"radarr\")) {\n        radarr.push(entry);\n      } else if (keyLower.startsWith(\"sonarr\")) {\n        sonarr.push(entry);\n      } else if (keyLower.startsWith(\"lidarr\")) {\n        lidarr.push(entry);\n      } else {\n        others.push(entry);\n      }\n    }\n    // Always show Radarr, Sonarr, and Lidarr sections even if empty\n    groups.push({ label: \"Radarr Instances\", type: \"radarr\", items: radarr });\n    groups.push({ label: \"Sonarr Instances\", type: \"sonarr\", items: sonarr });\n    groups.push({ label: \"Lidarr Instances\", type: \"lidarr\", items: lidarr });\n    if (others.length) {\n      groups.push({ label: \"Other Instances\", type: \"other\", items: others });\n    }\n    return groups;\n  }, [arrSections]);\n  const [activeArrKey, setActiveArrKey] = useState<string | null>(null);\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isWebSettingsOpen, setWebSettingsOpen] = useState(false);\n  const [isQbitOpen, setQbitOpen] = useState(false);\n  const [isDirty, setDirty] = useState(false);\n\n  useEffect(() => {\n    if (!formState || !originalConfig) {\n      setDirty(false);\n      return;\n    }\n    const flattenedOriginal = flatten(originalConfig);\n    const flattenedCurrent = flatten(formState);\n\n    let dirty = false;\n    for (const [key, value] of Object.entries(flattenedCurrent)) {\n      const originalValue = flattenedOriginal[key];\n      const changed =\n        Array.isArray(value) || Array.isArray(originalValue)\n          ? JSON.stringify(value ?? []) !== JSON.stringify(originalValue ?? [])\n          : value !== originalValue;\n      if (changed) {\n        dirty = true;\n        break;\n      }\n    }\n    if (!dirty) {\n      for (const key of Object.keys(flattenedOriginal)) {\n        if (!(key in flattenedCurrent)) {\n          dirty = true;\n          break;\n        }\n      }\n    }\n    setDirty(dirty);\n  }, [formState, originalConfig]);\n\n  useEffect(() => {\n    onDirtyChange?.(isDirty);\n  }, [isDirty, onDirtyChange]);\n\n  useEffect(() => {\n    if (!isDirty) return;\n    const handleBeforeUnload = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = \"\";\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [isDirty]);\n\n  useEffect(() => {\n    return () => {\n      onDirtyChange?.(false);\n    };\n  }, [onDirtyChange]);\n\n  useEffect(() => {\n    const anyModalOpen = Boolean(activeArrKey || isSettingsOpen || isWebSettingsOpen || isQbitOpen);\n    if (!anyModalOpen) return;\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setActiveArrKey(null);\n        setSettingsOpen(false);\n        setQbitOpen(false);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    const { style } = document.body;\n    const originalOverflow = style.overflow;\n    style.overflow = \"hidden\";\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      style.overflow = originalOverflow;\n    };\n  }, [activeArrKey, isSettingsOpen, isWebSettingsOpen, isQbitOpen]);\n\n  useEffect(() => {\n    if (!activeArrKey) return;\n    if (!arrSections.some(([key]) => key === activeArrKey)) {\n      setActiveArrKey(null);\n    }\n  }, [activeArrKey, arrSections]);\n\n  const addArrInstance = useCallback(\n    (type: \"radarr\" | \"sonarr\" | \"lidarr\") => {\n      if (!formState) return;\n      const prefix = type.charAt(0).toUpperCase() + type.slice(1);\n      let index = 1;\n      let key = `${prefix}-${index}`;\n      while (formState[key]) {\n        index += 1;\n        key = `${prefix}-${index}`;\n      }\n      const next = cloneConfig(formState) ?? {};\n      const defaults = ensureArrDefaults(type);\n      if (defaults && typeof defaults === \"object\") {\n        (defaults as Record<string, unknown>).Name = key;\n      }\n      next[key] = defaults;\n      setFormState(next);\n    },\n    [formState]\n  );\n  const deleteArrInstance = useCallback(\n    (key: string) => {\n      if (!formState) return;\n      const keyLower = key.toLowerCase();\n      if (!keyLower.startsWith(\"radarr\") && !keyLower.startsWith(\"sonarr\") && !keyLower.startsWith(\"lidarr\")) {\n        return;\n      }\n      const confirmed = window.confirm(\n        `Delete ${key}? This action cannot be undone.`\n      );\n      if (!confirmed) {\n        return;\n      }\n      const next = cloneConfig(formState) ?? {};\n      if (!(key in next)) {\n        return;\n      }\n      delete next[key];\n      setFormState(next);\n      if (activeArrKey === key) {\n        setActiveArrKey(null);\n      }\n      push(`${key} removed`, \"success\");\n    },\n    [formState, activeArrKey, push]\n  );\n\n  const handleRenameSection = useCallback(\n    (oldName: string, rawNewName: string) => {\n      if (!formState) return;\n      const newName = rawNewName.trim();\n      if (!newName || newName === oldName) {\n        return;\n      }\n      if (formState[newName]) {\n        push(`An instance named \"${newName}\" already exists`, \"error\");\n        return;\n      }\n      const next = cloneConfig(formState) ?? {};\n      const section = next[oldName];\n      delete next[oldName];\n      next[newName] = section;\n      if (section && typeof section === \"object\") {\n        (section as Record<string, unknown>).Name = newName;\n      }\n      setFormState(next);\n      if (activeArrKey === oldName) {\n        setActiveArrKey(newName);\n      }\n    },\n    [formState, push, activeArrKey]\n  );\n\n  const handleSubmit = useCallback(async () => {\n    if (!formState) return;\n    setSaving(true);\n    try {\n      const validationErrors = validateFormState(formState);\n      if (validationErrors.length) {\n        const formatted = validationErrors\n          .map((error) => `${error.path.join(\".\")}: ${error.message}`)\n          .join(\"\\n\");\n        const message =\n          validationErrors.length === 1\n            ? formatted\n            : `Please resolve the following issues:\\n${formatted}`;\n        push(message, \"error\");\n        setSaving(false);\n        return;\n      }\n      const flattenedOriginal = flatten(originalConfig ?? {});\n      const flattenedCurrent = flatten(formState);\n      const changes: Record<string, unknown> = {};\n      for (const [key, value] of Object.entries(flattenedCurrent)) {\n        const originalValue = flattenedOriginal[key];\n        const changed =\n          Array.isArray(value) || Array.isArray(originalValue)\n            ? JSON.stringify(value ?? []) !==\n              JSON.stringify(originalValue ?? [])\n            : value !== originalValue;\n        if (changed) {\n          changes[key] = value;\n        }\n      }\n      for (const key of Object.keys(flattenedOriginal)) {\n        if (!(key in flattenedCurrent)) {\n          changes[key] = null;\n        }\n      }\n      if (Object.keys(changes).length === 0) {\n        push(\"No changes detected\", \"info\");\n        setSaving(false);\n        return;\n      }\n      await updateConfig({ changes });\n      push(\"Configuration saved\", \"success\");\n      await loadConfig();\n    } catch (error) {\n      push(\n        error instanceof Error\n          ? error.message\n          : \"Failed to update configuration\",\n        \"error\"\n      );\n    } finally {\n      setSaving(false);\n    }\n  }, [formState, originalConfig, loadConfig, push]);\n\n  if (loading || !formState) {\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">Config</div>\n        <div className=\"card-body\">\n          <div className=\"loading\">\n            <span className=\"spinner\" /> Loading configuration…\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <>\n      <section className=\"card\">\n        <div className=\"card-header\">Config</div>\n        <div className=\"card-body config-layout\">\n          <section className=\"config-arr-group\">\n            <details className=\"config-arr-group__details\" open>\n              <summary>\n                <span>Core Configuration</span>\n              </summary>\n              <div className=\"config-grid\">\n                <ConfigSummaryCard\n                  title=\"Settings\"\n                  description=\"Core application configuration\"\n                  onConfigure={() => setSettingsOpen(true)}\n                />\n                <ConfigSummaryCard\n                  title=\"Web Settings\"\n                  description=\"Web UI configuration\"\n                  onConfigure={() => setWebSettingsOpen(true)}\n                />\n                <ConfigSummaryCard\n                  title=\"qBit\"\n                  description=\"qBittorrent connection details\"\n                  onConfigure={() => setQbitOpen(true)}\n                />\n              </div>\n            </details>\n          </section>\n          {groupedArrSections.length ? (\n            <div className=\"config-arr-groups\">\n              {groupedArrSections.map((group) => (\n                <section className=\"config-arr-group\" key={group.type}>\n                  <details className=\"config-arr-group__details\" open>\n                     <summary>\n                       <span>{group.label}</span>\n                       <span className=\"config-arr-group__count\">\n                         {group.items.length}\n                       </span>\n                        {(group.type === \"radarr\" || group.type === \"sonarr\" || group.type === \"lidarr\") && (\n                          <button\n                            className=\"btn small\"\n                            type=\"button\"\n                            onClick={() => addArrInstance(group.type as \"radarr\" | \"sonarr\" | \"lidarr\")}\n                          >\n                            <IconImage src={AddIcon} />\n                            Add Instance\n                          </button>\n                       )}\n                     </summary>\n                    <div className=\"config-arr-grid\">\n                      {group.items.map(([key, value]) => {\n                        const uri = getValue(value as ConfigDocument, [\"URI\"]);\n                        const category = getValue(value as ConfigDocument, [\"Category\"]);\n                        const managed = getValue(value as ConfigDocument, [\"Managed\"]);\n                        const canDelete = group.type === \"radarr\" || group.type === \"sonarr\" || group.type === \"lidarr\";\n                        return (\n                          <div className=\"card config-card config-arr-card\" key={key}>\n                            <div className=\"card-header\">{key}</div>\n                            <div className=\"card-body\">\n                              <dl className=\"config-arr-summary\">\n                                <div className=\"config-arr-summary__item\">\n                                  <dt>Managed</dt>\n                                  <dd>{managed ? \"Enabled\" : \"Disabled\"}</dd>\n                                </div>\n                                <div className=\"config-arr-summary__item\">\n                                  <dt>Category</dt>\n                                  <dd>{category ? String(category) : \"-\"}</dd>\n                                </div>\n                                <div className=\"config-arr-summary__item\">\n                                  <dt>URI</dt>\n                                  <dd className=\"config-arr-summary__uri\">\n                                    {uri ? String(uri) : \"-\"}\n                                  </dd>\n                                </div>\n                              </dl>\n                              <div className=\"config-arr-actions\">\n                                {canDelete ? (\n                                  <button\n                                    className=\"btn danger\"\n                                    type=\"button\"\n                                    onClick={() => deleteArrInstance(key)}\n                                  >\n                                    <IconImage src={DeleteIcon} />\n                                    Delete\n                                  </button>\n                                ) : null}\n                                <button\n                                  className=\"btn primary\"\n                                  type=\"button\"\n                                  onClick={() => setActiveArrKey(key)}\n                                >\n                                  <IconImage src={ConfigureIcon} />\n                                  Configure\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </details>\n                </section>\n              ))}\n            </div>\n          ) : null}\n          <div className=\"config-footer\">\n            <button\n              className=\"btn primary\"\n              onClick={() => void handleSubmit()}\n              disabled={saving}\n            >\n              <IconImage src={SaveIcon} />\n              Save + Live Reload\n            </button>\n          </div>\n        </div>\n      </section>\n      {activeArrKey && formState ? (\n        <ArrInstanceModal\n          keyName={activeArrKey}\n          state={(formState[activeArrKey] as ConfigDocument) ?? null}\n          onChange={handleFieldChange}\n          onRename={handleRenameSection}\n          onClose={() => setActiveArrKey(null)}\n        />\n      ) : null}\n      {isSettingsOpen ? (\n        <SimpleConfigModal\n          title=\"Settings\"\n          fields={SETTINGS_FIELDS}\n          state={formState}\n          basePath={[]}\n          onChange={handleFieldChange}\n          onClose={() => setSettingsOpen(false)}\n        />\n      ) : null}\n      {isWebSettingsOpen ? (\n        <SimpleConfigModal\n          title=\"Web Settings\"\n          fields={WEB_SETTINGS_FIELDS}\n          state={formState}\n          basePath={[]}\n          onChange={handleFieldChange}\n          onClose={() => setWebSettingsOpen(false)}\n        />\n      ) : null}\n      {isQbitOpen ? (\n        <SimpleConfigModal\n          title=\"qBit\"\n          fields={QBIT_FIELDS}\n          state={formState}\n          basePath={[]}\n          onChange={handleFieldChange}\n          onClose={() => setQbitOpen(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\ninterface ConfigSummaryCardProps {\n  title: string;\n  description: string;\n  onConfigure: () => void;\n}\n\nfunction ConfigSummaryCard({\n  title,\n  description,\n  onConfigure,\n}: ConfigSummaryCardProps): JSX.Element {\n  return (\n    <div className=\"card config-card\">\n      <div className=\"card-header\">{title}</div>\n      <div className=\"card-body config-summary-card\">\n        <p>{description}</p>\n        <div className=\"config-arr-actions\">\n          <button className=\"btn primary\" type=\"button\" onClick={onConfigure}>\n            <IconImage src={ConfigureIcon} />\n            Configure\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\ninterface FieldGroupProps {\n  title: string | null;\n  fields: FieldDefinition[];\n  state: ConfigDocument | ConfigDocument[keyof ConfigDocument] | null;\n  basePath: string[];\n  onChange: (path: string[], def: FieldDefinition, value: unknown) => void;\n  onRenameSection?: (oldName: string, newName: string) => void;\n  defaultOpen?: boolean;\n}\n\nfunction FieldGroup({\n  title,\n  fields,\n  state,\n  basePath,\n  onChange,\n  onRenameSection,\n  defaultOpen = false,\n}: FieldGroupProps): JSX.Element {\n  const sectionName = basePath[0] ?? \"\";\n\n  if (title === \"Trackers\") {\n    const trackers = (getValue(state as ConfigDocument, [\"Torrent\", \"Trackers\"]) ?? []) as ConfigDocument[];\n    const handleAddTracker = () => {\n      const nextTrackers = [\n        ...trackers,\n        {\n          Url: \"\",\n          RemoveIfExists: false,\n          SuperSeedMode: false,\n          AddTags: [],\n        },\n      ];\n      onChange([...basePath, \"Torrent\", \"Trackers\"], {} as FieldDefinition, nextTrackers);\n    };\n    const handleDeleteTracker = (index: number) => {\n      const nextTrackers = [...trackers];\n      nextTrackers.splice(index, 1);\n      onChange([...basePath, \"Torrent\", \"Trackers\"], {} as FieldDefinition, nextTrackers);\n    };\n    return (\n      <details className=\"config-section\" open={defaultOpen}>\n        <summary>{title}</summary>\n        <div className=\"config-section__body\">\n          <div className=\"tracker-grid\">\n            {trackers.map((tracker, index) => (\n              <TrackerCard\n                key={index}\n                fields={fields}\n                state={tracker}\n                basePath={[...basePath, \"Torrent\", \"Trackers\", String(index)]}\n                onChange={onChange}\n                onDelete={() => handleDeleteTracker(index)}\n              />\n            ))}\n          </div>\n          <div className=\"config-actions\">\n            <button className=\"btn\" type=\"button\" onClick={handleAddTracker}>\n              <IconImage src={AddIcon} />\n              Add Tracker\n            </button>\n          </div>\n        </div>\n      </details>\n    );\n  }\n\n  const renderedFields = fields.map((field) => {\n    if (field.sectionName) {\n      if (!sectionName) {\n        return null;\n      }\n      const tooltip = getTooltip([sectionName]);\n      return (\n        <SectionNameField\n          key={`${sectionName}.__name`}\n          label={field.label}\n          tooltip={tooltip}\n          currentName={sectionName}\n          placeholder={field.placeholder}\n          onRename={(newName) => onRenameSection?.(sectionName, newName)}\n        />\n      );\n    }\n\n    const pathSegments = field.path ?? [];\n    const path = [...basePath, ...pathSegments];\n    const key = path.join('.');\n    const rawValue = field.path\n      ? getValue(state as ConfigDocument, field.path as string[])\n      : undefined;\n    const formatted =\n      field.format?.(rawValue) ??\n      (field.type === \"checkbox\" ? Boolean(rawValue) : String(rawValue ?? \"\"));\n    const tooltip = getTooltip(path);\n    const description =\n      field.description ??\n      extractTooltipSummary(tooltip) ??\n      (field.type === \"checkbox\"\n        ? `Enable or disable ${field.label}.`\n        : `Set the ${field.label} value.`);\n\n    const isArrInstance = basePath.length > 0 && SERVARR_SECTION_REGEX.test(basePath[0] ?? \"\");\n    const isArrApiKey = isArrInstance && (field.path?.[field.path.length - 1] ?? \"\") === \"APIKey\";\n    const fieldClassName = field.fullWidth ? \"field field--full-width\" : \"field\";\n\n    if (field.secure) {\n      return (\n        <SecureField\n          key={key}\n          label={field.label}\n          tooltip={tooltip}\n          description={description}\n          value={String(rawValue ?? '')}\n          placeholder={field.placeholder}\n          canRefresh={!isArrApiKey}\n          onChange={(val) => onChange(path, field, val)}\n        />\n      );\n    }\n\n\n\n    if (field.type === \"checkbox\") {\n      return (\n        <div key={key} className=\"checkbox-field\">\n          <label title={tooltip}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(formatted)}\n              onChange={(event) => onChange(path, field, event.target.checked)}\n            />\n            {field.label}\n          </label>\n          {description && <div className=\"field-description\">{description}</div>}\n        </div>\n      );\n    }\n    if (field.type === \"select\") {\n      // Special handling for Theme field - apply immediately without save\n      const isThemeField = field.label === \"Theme\" && path.join('.') === \"WebUI.Theme\";\n\n      return (\n        <div key={key} className={fieldClassName}>\n          <label title={tooltip}>{field.label}</label>\n          <Select\n            options={(field.options ?? []).map(o => ({ value: o, label: o }))}\n            value={formatted ? { value: formatted, label: formatted } : null}\n            onChange={(option) => {\n              const newValue = option?.value || \"\";\n              onChange(path, field, newValue);\n\n              // If this is the theme field, apply immediately\n              if (isThemeField && typeof newValue === \"string\" && newValue) {\n                const theme = newValue.toLowerCase() as \"light\" | \"dark\";\n                document.documentElement.setAttribute('data-theme', theme);\n                localStorage.setItem(\"theme\", theme);\n              }\n            }}\n            styles={getSelectStyles()}\n          />\n          {description && <div className=\"field-description\">{description}</div>}\n          {isThemeField && <div className=\"field-hint\">Theme changes apply immediately</div>}\n        </div>\n      );\n    }\n    if (field.type === \"number\") {\n      return (\n        <div key={key} className={fieldClassName}>\n          <label title={tooltip}>{field.label}</label>\n          <input\n            type=\"number\"\n            value={Number(formatted) || 0}\n            onChange={(event) => onChange(path, field, String(event.target.value))}\n            placeholder={field.placeholder}\n          />\n          {description && <div className=\"field-description\">{description}</div>}\n        </div>\n      );\n    }\n    if (field.type === \"password\") {\n      return (\n        <div key={key} className={fieldClassName}>\n          <label title={tooltip}>{field.label}</label>\n          <input\n            type=\"password\"\n            value={String(formatted)}\n            onChange={(event) => onChange(path, field, event.target.value)}\n            placeholder={field.placeholder}\n          />\n          {description && <div className=\"field-description\">{description}</div>}\n        </div>\n      );\n    }\n    return (\n      <div key={key} className={fieldClassName}>\n        <label title={tooltip}>{field.label}</label>\n        <input\n          type=\"text\"\n          value={String(formatted)}\n          onChange={(event) => onChange(path, field, event.target.value)}\n          placeholder={field.placeholder}\n        />\n        {description && <div className=\"field-description\">{description}</div>}\n      </div>\n    );\n  });\n\n  if (title) {\n    return (\n      <details className=\"config-section\" open={defaultOpen}>\n        <summary>{title}</summary>\n        <div className=\"config-section__body field-grid\">{renderedFields}</div>\n      </details>\n    );\n  }\n\n  return <div className=\"field-grid\">{renderedFields}</div>;\n}\n\nfunction TrackerCard({\n  fields,\n  state,\n  basePath,\n  onChange,\n  onDelete,\n}: {\n  fields: FieldDefinition[];\n  state: ConfigDocument | null;\n  basePath: string[];\n  onChange: (path: string[], def: FieldDefinition, value: unknown) => void;\n  onDelete: () => void;\n}): JSX.Element {\n  const trackerName = (getValue(state, [\"Name\"]) as string) || \"New Tracker\";\n  return (\n    <details className=\"card tracker-card\" open>\n      <summary className=\"card-header\">\n        <span>{trackerName}</span>\n        <button className=\"btn danger ghost\" type=\"button\" onClick={onDelete}>\n          <IconImage src={DeleteIcon} />\n        </button>\n      </summary>\n      <div className=\"card-body\">\n        <FieldGroup title={null} fields={fields} state={state} basePath={basePath} onChange={onChange} />\n      </div>\n    </details>\n  );\n}\n\ninterface SectionNameFieldProps {\n  label: string;\n  currentName: string;\n  placeholder?: string;\n  tooltip?: string;\n  onRename: (newName: string) => void;\n}\n\nfunction SectionNameField({\n  label,\n  currentName,\n  placeholder,\n  tooltip,\n  onRename,\n}: SectionNameFieldProps): JSX.Element {\n  const [value, setValue] = useState(currentName);\n  const description =\n    extractTooltipSummary(tooltip) ?? `Rename the ${currentName} instance.`;\n\n  useEffect(() => {\n    setValue(currentName);\n  }, [currentName]);\n\n  const commit = () => {\n    const trimmed = value.trim();\n    if (!trimmed) {\n      setValue(currentName);\n      return;\n    }\n    if (trimmed !== currentName) {\n      onRename(trimmed);\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"field-label\">\n        <span>{label}</span>\n        {tooltip ? (\n          <span className=\"help-icon\" title={tooltip} aria-label={tooltip}>\n            ?\n          </span>\n        ) : null}\n      </label>\n      {description ? <p className=\"field-description\">{description}</p> : null}\n      <input\n        type=\"text\"\n        value={value}\n        placeholder={placeholder}\n        onChange={(event) => setValue(event.target.value)}\n        onBlur={commit}\n        onKeyDown={(event) => {\n          if (event.key === \"Enter\") {\n            event.preventDefault();\n            commit();\n          } else if (event.key === \"Escape\") {\n            event.preventDefault();\n            setValue(currentName);\n          }\n        }}\n      />\n    </div>\n  );\n}\n\ninterface SecureFieldProps {\n  label: string;\n  value: string;\n  placeholder?: string;\n  tooltip?: string;\n  description?: string;\n  canRefresh?: boolean;\n  onChange: (value: string) => void;\n}\n\nfunction SecureField({\n  label,\n  value,\n  placeholder,\n  tooltip,\n  description,\n  canRefresh = true,\n  onChange,\n}: SecureFieldProps): JSX.Element {\n  const [showValue, setShowValue] = useState(false);\n\n  const handleRefresh = () => {\n    let newKey = \"\";\n    if (typeof crypto !== \"undefined\" && typeof crypto.randomUUID === \"function\") {\n      newKey = crypto.randomUUID().replace(/-/g, \"\");\n    } else {\n      newKey = Array.from({ length: 32 }, () =>\n        Math.floor(Math.random() * 16).toString(16)\n      ).join(\"\");\n    }\n    onChange(newKey);\n  };\n\n  return (\n    <div className=\"field secure-field\">\n      <label title={tooltip}>{label}</label>\n      <div className=\"secure-field__input-group\">\n        <input\n          type={showValue ? \"text\" : \"password\"}\n          value={value}\n          placeholder={placeholder}\n          onChange={(event) => onChange(event.target.value)}\n        />\n        <button type=\"button\" className=\"btn ghost\" onClick={() => setShowValue(!showValue)}>\n          <IconImage src={VisibilityIcon} />\n        </button>\n        {canRefresh && (\n          <button type=\"button\" className=\"btn ghost\" onClick={handleRefresh}>\n            <IconImage src={RefreshIcon} />\n          </button>\n        )}\n      </div>\n      {description && <div className=\"field-description\">{description}</div>}\n    </div>\n  );\n}\n\ninterface ArrInstanceModalProps {\n  keyName: string;\n  state: ConfigDocument | ConfigDocument[keyof ConfigDocument] | null;\n  onChange: (path: string[], def: FieldDefinition, value: unknown) => void;\n  onRename: (oldName: string, newName: string) => void;\n  onClose: () => void;\n}\n\nfunction ArrInstanceModal({\n  keyName,\n  state,\n  onChange,\n  onRename,\n  onClose,\n}: ArrInstanceModalProps): JSX.Element {\n  const { generalFields, entryFields, entryOmbiFields, entryOverseerrFields, torrentFields, seedingFields, trackerFields } =\n    getArrFieldSets(keyName);\n  return (\n    <div className=\"modal-backdrop\" role=\"presentation\" onClick={onClose}>\n      <div\n        className=\"modal\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"arr-instance-modal-title\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"modal-header\">\n          <h2 id=\"arr-instance-modal-title\">\n            Configure <code>{keyName}</code>\n          </h2>\n          <button className=\"btn ghost\" type=\"button\" onClick={onClose}>\n            <IconImage src={CloseIcon} />\n            Close\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <FieldGroup\n            title={null}\n            fields={generalFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n            onRenameSection={onRename}\n            defaultOpen\n          />\n          <FieldGroup\n            title=\"Entry Search\"\n            fields={entryFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n            defaultOpen\n          />\n          <FieldGroup\n            title=\"Ombi Integration\"\n            fields={entryOmbiFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n          />\n          <FieldGroup\n            title=\"Overseerr Integration\"\n            fields={entryOverseerrFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n          />\n          <FieldGroup\n            title=\"Torrent Handling\"\n            fields={torrentFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n          />\n          <FieldGroup\n            title=\"Seeding\"\n            fields={seedingFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n          />\n          <FieldGroup\n            title=\"Trackers\"\n            fields={trackerFields}\n            state={state}\n            basePath={[keyName]}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn primary\" type=\"button\" onClick={onClose}>\n            <IconImage src={SaveIcon} />\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface SimpleConfigModalProps {\n  title: string;\n  fields: FieldDefinition[];\n  state: ConfigDocument | null;\n  basePath: string[];\n  onChange: (path: string[], def: FieldDefinition, value: unknown) => void;\n  onClose: () => void;\n}\n\nfunction SimpleConfigModal({\n  title,\n  fields,\n  state,\n  basePath,\n  onChange,\n  onClose,\n}: SimpleConfigModalProps): JSX.Element | null {\n  if (!state) return null;\n  return (\n    <div className=\"modal-backdrop\" role=\"presentation\" onClick={onClose}>\n      <div\n        className=\"modal\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={`${title}-modal-title`}\n        onClick={(event) => event.stopPropagation()}\n      >\n        <div className=\"modal-header\">\n          <h2 id={`${title}-modal-title`}>{title}</h2>\n          <button className=\"btn ghost\" type=\"button\" onClick={onClose}>\n            <IconImage src={CloseIcon} />\n            Close\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <FieldGroup\n            title={null}\n            fields={fields}\n            state={state}\n            basePath={basePath}\n            onChange={onChange}\n            defaultOpen\n          />\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn primary\" type=\"button\" onClick={onClose}>\n            <IconImage src={SaveIcon} />\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["FIELD_TOOLTIPS","getTooltip","path","joined","withArrPrefix","entrySearchPrefix","torrentPrefix","leaf","VisibilityIcon","AddIcon","SaveIcon","DeleteIcon","SERVARR_SECTION_REGEX","getSelectStyles","isDark","base","state","parseList","value","part","formatList","IMPORT_MODE_OPTIONS","SENTENCE_END","extractTooltipSummary","tooltip","trimmed","match","sentence","SETTINGS_FIELDS","folder","raw","context","freeSpace","getValue","num","parts","WEB_SETTINGS_FIELDS","port","QBIT_FIELDS","ARR_GENERAL_FIELDS","uri","apiKey","ARR_ENTRY_SEARCH_FIELDS","str","ARR_ENTRY_SEARCH_OMBI_FIELDS","ARR_ENTRY_SEARCH_OVERSEERR_FIELDS","ARR_TORRENT_FIELDS","ARR_SEEDING_FIELDS","ARR_TRACKER_FIELDS","getArrFieldSets","arrKey","lower","isSonarr","isLidarr","generalFields","entryFields","field","entryOmbiFields","entryOverseerrFields","torrentFields","seedingFields","trackerFields","isEmptyValue","basicValidation","def","label","isRequired","validateFieldGroup","errors","fields","basePath","pathSegments","fullPath","baseError","customError","validateFormState","formState","rootContext","key","section","sectionContext","fieldSets","cloneConfig","config","doc","cur","setValue","idx","flatten","prefix","result","nextPath","ensureArrDefaults","type","lowerType","isRadarr","arrErrorCodes","entrySearch","ConfigView","props","onDirtyChange","push","useToast","originalConfig","setOriginalConfig","useState","setFormState","loading","setLoading","saving","setSaving","loadConfig","useCallback","getConfig","error","useEffect","handleFieldChange","next","parsed","arrSections","useMemo","groupedArrSections","groups","sorted","a","b","radarr","sonarr","lidarr","others","entry","keyLower","activeArrKey","setActiveArrKey","isSettingsOpen","setSettingsOpen","isWebSettingsOpen","setWebSettingsOpen","isQbitOpen","setQbitOpen","isDirty","setDirty","flattenedOriginal","flattenedCurrent","dirty","originalValue","handleBeforeUnload","event","handleKeyDown","style","originalOverflow","addArrInstance","index","defaults","deleteArrInstance","handleRenameSection","oldName","rawNewName","newName","handleSubmit","validationErrors","formatted","message","changes","updateConfig","jsxs","jsx","Fragment","ConfigSummaryCard","group","IconImage","category","managed","canDelete","ConfigureIcon","ArrInstanceModal","SimpleConfigModal","title","description","onConfigure","FieldGroup","onChange","onRenameSection","defaultOpen","sectionName","trackers","handleAddTracker","nextTrackers","handleDeleteTracker","tracker","TrackerCard","renderedFields","SectionNameField","rawValue","isArrApiKey","fieldClassName","SecureField","val","isThemeField","Select","o","option","newValue","theme","onDelete","trackerName","currentName","placeholder","onRename","commit","canRefresh","showValue","setShowValue","handleRefresh","newKey","RefreshIcon","keyName","onClose","e","CloseIcon"],"mappings":"gLAAO,MAAMA,EAAyC,CACpD,wBACE,yFACF,mBAAoB,sCACpB,mCACE,yFACF,qBACE,mGACF,2BACE,gFACF,2BACE,+EACF,gCACE,gFACF,0BACE,yEACF,2BACE,oDACF,0BAA2B,0CAC3B,2BAA4B,2CAC5B,mBAAoB,yDACpB,qCACE,2EACF,oBACE,gFACF,6BACE,gEACF,6BACE,4EACF,0BACE,yFACF,aACE,6EACF,aAAc,sCACd,cACE,0FACD,gBAAiB,qCACjB,oBAAqB,oEACrB,cAAe,yDAEhB,gBACE,0FACF,YAAa,wCACb,YAAa,0BACb,gBAAiB,8BACjB,gBACE,sFAEF,cAAe,sEACf,UACE,0FACF,aAAc,sDACd,eACE,yEACF,eAAgB,2DAChB,iBACE,kFACF,mBACE,yEACF,4BACE,8EACF,+BACE,+EAEF,4BAA6B,kCAC7B,iCAAkC,iDAClC,0BAA2B,sDAC3B,0BACE,+EACF,2BACE,+DACF,8BACE,8EACF,kCACE,oEACF,8BACE,8DACF,iCACE,2DACF,sCACE,iEACF,uCACE,kFACF,4CACE,uEACF,gCACE,iEACF,8BAA+B,kEAC/B,iCACE,8EACF,iCACE,qEACF,6BACE,0EACF,uCACE,mEAEF,sCACE,4DACF,2BAA4B,mBAC5B,8BAA+B,gBAC/B,gCAAiC,gDACjC,wBAAyB,gDAEzB,gDACE,yDACF,qCAAsC,wBACtC,wCAAyC,qBACzC,qCAAsC,qDACtC,6BAA8B,qDAE9B,+BACE,sFACF,+BACE,kEACF,iCACE,uEACF,iCACE,8EACF,qBAAsB,+DACtB,oCACE,uEACF,qBACE,sFACF,qCACE,2EACF,0BAA2B,qCAC3B,uBACE,uFACF,0BACE,2FACF,6BAA8B,mCAC9B,mCACE,kGAEF,kDACE,+EACF,gDACE,6EACF,qCACE,wDACF,qCACE,+DACF,oCACE,+HACJ,EAEO,SAASC,EAAWC,EAAoC,CAC7D,MAAMC,EAASD,EAAK,KAAK,GAAG,EAC5B,GAAIF,EAAeG,CAAM,EAAG,OAAOH,EAAeG,CAAM,EACxD,GAAID,EAAK,OAAS,EAAG,CACnB,MAAME,EAAg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"}